<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xl.backen.dao.CircleMapper">
  <resultMap id="BaseResultMap" type="com.xl.backen.entity.Circle">
    <id column="uuid" jdbcType="VARCHAR" property="uuid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="orgId" jdbcType="VARCHAR" property="orgid" />
    <result column="weight" jdbcType="INTEGER" property="weight" />
    <result column="head_pic" jdbcType="VARCHAR" property="headPic" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="flag" jdbcType="INTEGER" property="flag" />
  </resultMap>
  <sql id="Base_Column_List">
    uuid, name, orgId, weight, head_pic, description, status, create_time, update_time, 
    flag
  </sql>

  <!-- 是否加入圈子 -->
  <select id="isJoinCircle" resultType="java.lang.Integer">
    select count(*) from tb_circle_people where circle_id = #{uuid} and people_id = #{peopleId} and flag = 1
  </select>

  <!-- 加入圈子 -->
  <select id="joinCircle">
    insert into tb_circle_people (uuid, people_id, circle_id, flag, create_time, update_time)
    values (#{uuid}, #{peopleId}, #{circleId}, #{flag}, #{createTime}, #{updateTime})
  </select>

  <select id="queryAll" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/>
    from tb_circle
    where
    <if test="name != null and name != ''">
        name like CONCAT(#{name}, "%") and
    </if>
    <if test="orgid != null and orgid != ''">
        orgId = #{orgid} and
    </if>
    flag = 1
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tb_circle
    where uuid = #{uuid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from tb_circle
    where uuid = #{uuid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.xl.backen.entity.Circle">
    insert into tb_circle (uuid, name, orgId, 
      weight, head_pic, description, 
      status, create_time, update_time, 
      flag)
    values (#{uuid,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{orgid,jdbcType=VARCHAR}, 
      #{weight,jdbcType=INTEGER}, #{headPic,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{flag,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.xl.backen.entity.Circle">
    insert into tb_circle
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        uuid,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="orgid != null">
        orgId,
      </if>
      <if test="weight != null">
        weight,
      </if>
      <if test="headPic != null">
        head_pic,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="flag != null">
        flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="orgid != null">
        #{orgid,jdbcType=VARCHAR},
      </if>
      <if test="weight != null">
        #{weight,jdbcType=INTEGER},
      </if>
      <if test="headPic != null">
        #{headPic,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="flag != null">
        #{flag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xl.backen.entity.Circle">
    update tb_circle
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="orgid != null">
        orgId = #{orgid,jdbcType=VARCHAR},
      </if>
      <if test="weight != null">
        weight = #{weight,jdbcType=INTEGER},
      </if>
      <if test="headPic != null">
        head_pic = #{headPic,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="flag != null">
        flag = #{flag,jdbcType=INTEGER},
      </if>
    </set>
    where uuid = #{uuid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xl.backen.entity.Circle">
    update tb_circle
    set name = #{name,jdbcType=VARCHAR},
      orgId = #{orgid,jdbcType=VARCHAR},
      weight = #{weight,jdbcType=INTEGER},
      head_pic = #{headPic,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      flag = #{flag,jdbcType=INTEGER}
    where uuid = #{uuid,jdbcType=VARCHAR}
  </update>
</mapper>